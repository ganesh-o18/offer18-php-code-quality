#!/usr/bin/env php

<?php

// Check if directory path is provided as an argument
if ($argc < 2) {
  echo "Please provide a directory path as an argument." . PHP_EOL;
  exit(1);
}

$directory = $argv[1];

$files = $directory . '/changed_files.txt';
$changedFiles = file_get_contents($files);
$changedFileArray = array_values(array_filter(explode(' ', $changedFiles)));

echo @json_encode($changedFileArray);

echo "File after removing \n";
foreach ($changedFileArray as $fileName) {
  $fileActualName[] = preg_replace('/\n/', '', $fileName);
}

echo @json_encode($fileActualName);

// Check if the provided path is a directory
if (!is_dir($directory)) {
  echo "The provided path is not a valid directory." . PHP_EOL;
  exit(1);
}

$files = scandir($directory);

echo "Files in directory '$directory':" . PHP_EOL;

$phpFiles = [];

$files = $fileActualName;

foreach ($files as $file) {
  if ($file === '.' || $file === '..') continue;
  if (pathinfo($file, PATHINFO_EXTENSION) === 'php') {
    $phpFiles[] = $file;
  }
}

function isCamelCase($string)
{
  $string = ltrim($string, '$');
  return preg_match('/^[a-z][a-zA-Z0-9]*$/', $string);
}

$nonCamelCaseVariables = [];

echo "FILE" . PHP_EOL;

echo @json_encode($phpFiles) . PHP_EOL;

foreach ($phpFiles as $file) {
  $source = file_get_contents($file);
  $tokens = token_get_all($source);
  foreach ($tokens as $index => $token) {
    if (is_array($token) && $token[0] === T_VARIABLE) {
      $variableName = $token[1];
      if (!isCamelCase($variableName)) {
        $nonCamelCaseVariables[] = $variableName;
      }
    }
  }
}

echo "Non camel-case variable" . PHP_EOL;
echo json_encode($nonCamelCaseVariables);

$outpuFilePath = $directory . '/output.txt';

$comment = '#### Following variables are not in camel case' . PHP_EOL;
foreach ($nonCamelCaseVariables as $variableName) {
  $comment .= '- ‚ùå ' . $variableName . PHP_EOL;
}
$comment = substr($comment, 0, 60000);
file_put_contents($outpuFilePath, $comment);
